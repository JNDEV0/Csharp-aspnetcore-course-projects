// <auto-generated />
using System;
using Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Entities.Migrations
{
    [DbContext(typeof(PersonsDbContext))]
    [Migration("20250203102510_AddPerson_StoredProcedure_Edit")]
    partial class AddPerson_StoredProcedure_Edit
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entities.Country", b =>
                {
                    b.Property<Guid>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CountryId");

                    b.ToTable("Countries", (string)null);

                    b.HasData(
                        new
                        {
                            CountryId = new Guid("14e0b461-8fb4-4e23-b853-306fac4429bf"),
                            Name = "Mongolia"
                        },
                        new
                        {
                            CountryId = new Guid("350d4004-f8cd-42c0-9eb2-4ec6a8ec0314"),
                            Name = "Uzbekistan"
                        });
                });

            modelBuilder.Entity("Entities.Person", b =>
                {
                    b.Property<Guid>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CountryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Dob")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ReceiveNewsLetters")
                        .HasColumnType("bit");

                    b.HasKey("PersonId");

                    b.ToTable("Persons", (string)null);

                    b.HasData(
                        new
                        {
                            PersonId = new Guid("c03bbe45-9aeb-4d24-99e0-4743016ffce9"),
                            Address = "123 trueman rd",
                            CountryId = new Guid("14e0b461-8fb4-4e23-b853-306fac4429bf"),
                            CountryName = "Mongolia",
                            Dob = new DateTime(1989, 8, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "email1@format.com",
                            Gender = "Male",
                            Name = "Borat",
                            ReceiveNewsLetters = false
                        },
                        new
                        {
                            PersonId = new Guid("c3abddbd-cf50-41d2-b6c4-cc7d5a750928"),
                            Address = "43 sea st",
                            CountryId = new Guid("14e0b461-8fb4-4e23-b853-306fac4429bf"),
                            CountryName = "Mongolia",
                            Dob = new DateTime(1980, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "email2@format.com",
                            Gender = "Male",
                            Name = "Zappa",
                            ReceiveNewsLetters = false
                        },
                        new
                        {
                            PersonId = new Guid("c6d50a47-f7e6-4482-8be0-4ddfc057fa6e"),
                            Address = "99 longway ct",
                            CountryId = new Guid("350d4004-f8cd-42c0-9eb2-4ec6a8ec0314"),
                            CountryName = "Uzbekistan",
                            Dob = new DateTime(1974, 8, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "email3@format.com",
                            Gender = "Female",
                            Name = "Stern",
                            ReceiveNewsLetters = true
                        },
                        new
                        {
                            PersonId = new Guid("d15c6d9f-70b4-48c5-afd3-e71261f1a9be"),
                            Address = "44 construct dr",
                            CountryId = new Guid("350d4004-f8cd-42c0-9eb2-4ec6a8ec0314"),
                            CountryName = "Uzbekistan",
                            Dob = new DateTime(1960, 1, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "email4@format.com",
                            Gender = "Other",
                            Name = "Bean",
                            ReceiveNewsLetters = true
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
